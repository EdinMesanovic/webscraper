name: Release KorpaScraper

on:
  push:
    tags: ['v*']          # npr. v0.1.0
  workflow_dispatch:       # ručno pokretanje (ako treba)

env:
  APP_NAME: KorpaScraper

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-14   # Apple Silicon
            target: macos-arm64
            ext: zip
          - os: macos-13   # Intel
            target: macos-x64
            ext: zip
          - os: windows-latest
            target: windows-x64
            ext: zip
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build binary
        run: |
          pyinstaller --onefile --name "${{ env.APP_NAME }}" scraper.py

      - name: Package
        shell: bash
        run: |
          cd dist
          # ZIP sve pod istim imenom + platforma + verzija (tag)
          VER="${GITHUB_REF_NAME:-dev}"
          OUT="${{ env.APP_NAME }}_${{ matrix.target }}_${VER}.${{ matrix.ext }}"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            powershell Compress-Archive -Path "${{ env.APP_NAME }}.exe" -DestinationPath "${OUT}"
          else
            zip -r "${OUT}" "${{ env.APP_NAME }}"
          fi
          # checksum
          if command -v shasum >/dev/null 2>&1; then
            shasum -a 256 "${OUT}" > "${OUT}.sha256"
          else
            certutil -hashfile "${OUT}" SHA256 | findstr /v "hash" > "${OUT}.sha256"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            dist/${{ env.APP_NAME }}_${{ matrix.target }}_${{ github.ref_name }}.zip
            dist/${{ env.APP_NAME }}_${{ matrix.target }}_${{ github.ref_name }}.zip.sha256

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/${{ env.APP_NAME }}_*.zip
            dist/**/${{ env.APP_NAME }}_*.zip.sha256
          generate_release_notes: true
          draft: false
          prerelease: false
